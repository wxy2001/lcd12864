C51 COMPILER V9.57.0.0   KEYBOARD                                                          06/08/2022 11:54:35 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE KEYBOARD
OBJECT MODULE PLACED IN .\OutPut\keyBoard.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Source\other\keyBoard.c LARGE OPTIMIZE(8,SIZE) BROWSE DEBUG OBJECTEXTEND
                    - PRINT(.\OutPut\keyBoard.lst) TABS(2) OBJECT(.\OutPut\keyBoard.obj)

line level    source

   1          #include <IAP15W4K61S4.h>
   2          
   3          /**************************************定义全局变量*******************************************************
             -*************/  
   4          sbit keyOut1 = P2^3;
   5          sbit keyOut2 = P2^2;
   6          sbit keyOut3 = P2^1;
   7          sbit keyOut4 = P2^0;
   8          sbit keyIn1 = P2^5;
   9          sbit keyIn2 = P2^6;
  10          sbit keyIn3 = P2^7;
  11          sbit keyIn4 = P2^4;
  12          
  13          unsigned char current[4][4] = {         //当前状态表
  14              1, 1, 1, 1,
  15              1, 1, 1, 1,
  16              1, 1, 1, 1,
  17              1, 1, 1, 1
  18          };
  19          
  20          
  21          unsigned char code hashMap[4][4] = {    //hash表，映射按键功能
  22              0x31, 0x32, 0x33, 0x26,
  23              0x34, 0x35, 0x36, 0x25,
  24              0x37, 0x38, 0x39, 0x28,
  25              0x30, 0x1B, 0x0D, 0x27
  26          };
  27          
  28          /**************************************定义外部函数接口***************************************************
             -*********************/
  29          extern void keyAction(unsigned char keycode);
  30          
  31          /**************************************函数声明***********************************************************
             -*************/
  32          void keyScanner(void);                  //键盘扫描，定时中断
  33          void keyDriver(void);                   //按键驱动函数
  34              
  35          void keyScanner(void)                   //键盘扫描，定时中断
  36          {
  37   1          unsigned char k;
  38   1          static unsigned char keyout = 0;
  39   1          static unsigned char state[][4] = { //状态保留
  40   1              0xFF, 0xFF, 0xFF, 0xFF,
  41   1              0xFF, 0xFF, 0xFF, 0xFF,
  42   1              0xFF, 0xFF, 0xFF, 0xFF,
  43   1              0xFF, 0xFF, 0xFF, 0xFF
  44   1          };
  45   1      
  46   1          state[keyout][0] = state[keyout][0] << 1 | keyIn1;
  47   1          state[keyout][1] = state[keyout][1] << 1 | keyIn2;
  48   1          state[keyout][2] = state[keyout][2] << 1 | keyIn3;
  49   1          state[keyout][3] = state[keyout][3] << 1 | keyIn4;
  50   1          for (k = 0; k < 4; k++) {
  51   2              if (0x0F == (0x0F & state[keyout][k])) {
C51 COMPILER V9.57.0.0   KEYBOARD                                                          06/08/2022 11:54:35 PAGE 2   

  52   3                  current[keyout][k] = 1;
  53   3              }
  54   2              else if ((0x00 == (0x0F & state[keyout][k]))) {
  55   3                  current[keyout][k] = 0;
  56   3              }
  57   2          }
  58   1          keyout++;
  59   1          keyout &= 0x03;
  60   1          switch (keyout) {
  61   2              case 0:
  62   2                  keyOut4 = 1; keyOut1 = 0; break;
  63   2              case 1:
  64   2                  keyOut1 = 1; keyOut2 = 0; break;
  65   2              case 2:
  66   2                  keyOut2 = 1; keyOut3 = 0; break;
  67   2              case 3:
  68   2                  keyOut3 = 1; keyOut4 = 0; break;
  69   2              default: 
  70   2                  break;
  71   2          }
  72   1      }
  73          
  74          void keyDriver(void)                              //按键驱动函数
  75          {
  76   1          unsigned char k;
  77   1          unsigned char i;
  78   1        
  79   1          static char previous[][4] = {                 //按键的上一次状态
  80   1              1, 1, 1, 1,
  81   1              1, 1, 1, 1,
  82   1              1, 1, 1, 1,
  83   1              1, 1, 1, 1
  84   1          };
  85   1      
  86   1          for (k = 0; k < 4; k++) {
  87   2              for (i = 0; i < 4; i++) {
  88   3                  if (current[k][i] != previous[k][i]) {
  89   4                      if (0 == current[k][i]) {
  90   5                          keyAction(hashMap[k][i]);   //各按键功能 
  91   5                      }
  92   4                      previous[k][i] = current[k][i];
  93   4                  }
  94   3              }
  95   2          }
  96   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    529    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =     49       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
