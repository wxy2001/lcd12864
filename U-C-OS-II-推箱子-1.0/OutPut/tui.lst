C51 COMPILER V9.57.0.0   TUI                                                               06/04/2022 13:56:07 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE TUI
OBJECT MODULE PLACED IN .\OutPut\tui.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE tui.c LARGE OPTIMIZE(8,SIZE) BROWSE DEBUG OBJECTEXTEND PRINT(.\OutPut\tu
                    -i.lst) TABS(2) OBJECT(.\OutPut\tui.obj)

line level    source

   1          #include"IAP15W4K61S4.h"
   2          #include<stdlib.h>
   3          #include<stdio.h>
   4          #include<intrins.h>
   5          #define uchar unsigned char
   6          #define uint  unsigned int
   7           
   8          sbit RS = P3^5;
   9          sbit RW = P3^6;
  10          sbit EN = P3^7;
  11           
  12          sbit key_up = P2^1;
  13          sbit key_down = P2^2;
  14          sbit key_left = P2^0;
  15          sbit key_right = P2^3;
  16           
  17          #define LCD_data P0
  18          int cur_x,cur_y,X,dir[4][2]={-1,0,1,0,0,-1,0,1},where[3][2]={4,6,5,6,6,6};
  19           
  20           
  21          uchar code table1[]="LCD12864";
  22          uchar code table2[]="推箱子";
  23          uchar code table3[]="BY laoda";
  24          uchar code table4[]="You Win!";
  25           
  26          uchar code tmp[]={//空格
  27          0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
  28          };
  29          /* 0表示空格，1表示墙，2表示人，3表示箱子，4表示目的地 */
  30          uchar code mat[8][8]={
  31          1,1,1,1,1,1,1,1,
  32          1,1,1,1,0,2,1,1,
  33          1,1,0,0,3,0,1,1,
  34          1,1,0,1,0,1,1,1,
  35          1,0,0,1,0,1,4,1,
  36          1,0,1,0,0,3,4,1,
  37          1,0,3,0,0,0,4,1,
  38          1,1,1,1,1,1,1,1
  39          };
  40           
  41          uchar map[8][8];
  42           
  43          uchar code Qiang[]={//方格，有间隙
  44          0xff,0x81,0x81,0x81,0x81,0x81,0x81,0xff
  45          };
  46           
  47          uchar code Ren[]={//人
  48          0xff,0xff,0xe3,0xc5,0xb1,0xc5,0xe3,0xff
  49          };
  50           
  51          uchar code Xiang[]={//箱子  
  52          0xff,0x42,0x24,0x18,0x18,0x24,0x42,0xff  
  53          };
  54           
C51 COMPILER V9.57.0.0   TUI                                                               06/04/2022 13:56:07 PAGE 2   

  55          uchar code Mudi[]={//目的地  
  56          0xff,0xff,0xe7,0x81,0x81,0xe7,0xff,0xff  
  57          };
  58           
  59          void delay(uint i) //延时函数 
  60          {
  61   1        while(--i);
  62   1      }
  63           
  64          void read_busy()//读忙函数。每次读写都要进行读忙操作 
  65          {
  66   1        RS=0;
  67   1        RW=1;
  68   1        EN=1;
  69   1        while(LCD_data & 0x80);//最高位为BF位 DB7---BF 
  70   1        EN=0;
  71   1      }
  72           
  73          
  74          void write_LCD_command(uchar value)//写指令函数 
  75          {
  76   1        read_busy();
  77   1        RS=0;
  78   1        RW=0;
  79   1        EN=0;   //EN从1---0锁存数据 
  80   1        LCD_data=value;
  81   1        delay(20);
  82   1        EN=1;
  83   1        delay(20);
  84   1        EN=0;
  85   1      } 
  86           
  87          void write_LCD_data(uchar value)//写数据函数 
  88          {
  89   1        read_busy();
  90   1        RS=1;
  91   1        RW=0;
  92   1        EN=0;   //EN从1---0锁存数据 
  93   1        LCD_data=value;
  94   1        delay(20);
  95   1        EN=1;
  96   1        delay(20);
  97   1        EN=0;
  98   1      } 
  99          void init_BMP()  
 100          {
 101   1        write_LCD_command(0x38);//CL=1--8位。扩充指令(RE=1)，绘图打开(G=1)
 102   1        delay(100); //适当延时 
 103   1        write_LCD_command(0x38);
 104   1        delay(37);
 105   1        write_LCD_command(0x38);//8位(CL=1)，扩充指令(RE=1)，绘图打开(G=1) 
 106   1        delay(100);
 107   1        write_LCD_command(0x0c);
 108   1        delay(100);
 109   1        write_LCD_command(0x06);
 110   1        delay(100);
 111   1        write_LCD_command(0x01);//清屏指令 
 112   1        delay(1000);
 113   1      }
 114           
 115          void init_Hanzi()       //8位并口方式LCD1864初始化函数 
 116          {
C51 COMPILER V9.57.0.0   TUI                                                               06/04/2022 13:56:07 PAGE 3   

 117   1        delay(4000);      //等待时间>40ms 
 118   1        write_LCD_command(0x30);//功能设定：8位数据、基本指令操作 
 119   1        delay(100);       //等待时间>100us 
 120   1        write_LCD_command(0x30);//功能设定：8位数据、基本指令操作 
 121   1        delay(37);        //等待时间>37us 
 122   1        write_LCD_command(0x0C);//显示设定：整体显示、游标关、不反白 
 123   1        delay(100);       // 等待时间>100us 
 124   1        //write_LCD_command(0x01);//清屏指令 
 125   1        //delay(10000);     //等待时间>10ms 
 126   1        write_LCD_command(0x06);//进入点设定：地址指针加1 
 127   1      }
 128           
 129          void display_BMP(uchar fuck,uchar name1,uchar name2,uchar y,uchar x)  
 130          {
 131   1        uchar shit,i;
 132   1        if(fuck==0)shit=0x80;
 133   1        else shit=0x88;
 134   1        for(i=0;i<8;i++)    
 135   1        { 
 136   2          write_LCD_command(0x80+i+8*x);//先送垂直地址 
 137   2          write_LCD_command(shit+y);  //再送水平地址 ----显示图片的上半部分 
 138   2       
 139   2          if(name1==0)  write_LCD_data(tmp[i]);
 140   2          else if(name1==1) write_LCD_data(Qiang[i]);
 141   2          else if(name1==2) write_LCD_data(Ren[i]);
 142   2          else if(name1==3) write_LCD_data(Xiang[i]);
 143   2          else if(name1==4) write_LCD_data(Mudi[i]);
 144   2       
 145   2          if(name2==0)  write_LCD_data(tmp[i]);
 146   2          else if(name2==1) write_LCD_data(Qiang[i]);
 147   2          else if(name2==2) write_LCD_data(Ren[i]);
 148   2          else if(name2==3) write_LCD_data(Xiang[i]);
 149   2          else if(name2==4) write_LCD_data(Mudi[i]);
 150   2        }
 151   1      }
 152           
 153          void show_map(){
 154   1        uchar i,j,x,y;
 155   1       
 156   1        for(i=0;i<2;i++){
 157   2          for(j=0;j<4;j++){
 158   3            x=2*i; y=2*j;
 159   3            display_BMP(0,map[x][y],map[x][y+1],j,2*i);
 160   3            x=2*i+1; y=2*j;
 161   3            display_BMP(0,map[x][y],map[x][y+1],j,2*i+1);
 162   3          }
 163   2        }
 164   1       
 165   1        for(i=2;i<4;i++){
 166   2          for(j=0;j<4;j++){
 167   3            x=2*i; y=2*j;
 168   3            display_BMP(1,map[x][y],map[x][y+1],j,2*(i-2));
 169   3            x=2*i+1; y=2*j;
 170   3            display_BMP(1,map[x][y],map[x][y+1],j,2*(i-2)+1);
 171   3          }
 172   2        }
 173   1       
 174   1        init_Hanzi();   
 175   1        write_LCD_command(0x80+4);
 176   1        for(i=0;i<8;i++)
 177   1        {
 178   2          write_LCD_data(table1[i]);
C51 COMPILER V9.57.0.0   TUI                                                               06/04/2022 13:56:07 PAGE 4   

 179   2        }
 180   1        write_LCD_command(0x90+4);
 181   1        for(i=0;i<8;i++)
 182   1        {
 183   2          write_LCD_data(table2[i]);
 184   2        }
 185   1       
 186   1        write_LCD_command(0x88+4);
 187   1        for(i=0;i<8;i++)
 188   1        {
 189   2          write_LCD_data(table3[i]);
 190   2        }
 191   1        delay(100);
 192   1      }
 193           
 194          void clear()//图形模式下，没有清屏函数，手动全部送0           
 195          {
 196   1        uchar i,j;
 197   1        for(i=0;i<32;i++){
 198   2          write_LCD_command(0x80+i);//先送垂直地址 
 199   2          write_LCD_command(0x80);  //再送水平地址 ----显示图片的上半部分 
 200   2          for(j=0;j<16;j++)write_LCD_data(0);
 201   2        }
 202   1        for(i=0;i<32;i++){
 203   2          write_LCD_command(0x80+i);  //先送垂直地址
 204   2          write_LCD_command(0x88);  //显示图片的下半部分 
 205   2          for(j=0;j<16;j++)write_LCD_data(0);
 206   2        }
 207   1      }
 208           
 209          uchar judge(int x,int y,int id){              //id 表示方向数组的行标，0,1,2,3 分别表示上下左右
 210   1        int xx,yy,xxx,yyy;
 211   1        xx=x+dir[id][0]; yy=y+dir[id][1];
 212   1        if(map[xx][yy]==0 || map[xx][yy]==4)return 1;        //1表示前面是 空格 或者 目的地，就是可以直接移动
 213   1        else if(map[xx][yy]==1)return 0;               //0表示无法移动
 214   1        else if(map[xx][yy]==3){
 215   2          xxx=xx+dir[id][0]; yyy=yy+dir[id][1];
 216   2          if(map[xxx][yyy]==1 || map[xxx][yyy]==3)return 0;
 217   2          else if(map[xxx][yyy]==0 || map[xxx][yyy]==4)return 2; //2表示需要间接移动，先把前面的箱子移动一，再让人
             -移动一
 218   2        }return 0;
 219   1      }
 220           
 221          void update(uchar a,uchar b){
 222   1        uchar i,j,x,y;
 223   1       
 224   1        write_LCD_command(0x3E);//8位(CL=1)，扩充指令(RE=1)，绘图打开(G=1) 
 225   1        delay(100);
 226   1       
 227   1        if(a<4){
 228   2          i=a/2; j=b/2;
 229   2          x=2*i; y=2*j;
 230   2          display_BMP(0,map[x][y],map[x][y+1],j,2*i);
 231   2          x=2*i+1; y=2*j;
 232   2          display_BMP(0,map[x][y],map[x][y+1],j,2*i+1);
 233   2        }
 234   1        else {
 235   2          i=a/2; j=b/2;
 236   2          x=2*i; y=2*j;
 237   2          display_BMP(1,map[x][y],map[x][y+1],j,2*(i-2));
 238   2          x=2*i+1; y=2*j;
 239   2          display_BMP(1,map[x][y],map[x][y+1],j,2*(i-2)+1);
C51 COMPILER V9.57.0.0   TUI                                                               06/04/2022 13:56:07 PAGE 5   

 240   2        }
 241   1      }
 242           
 243          void fun(uchar key,uchar dirction){
 244   1        uchar x,y;
 245   1        /* 0表示空格，1表示墙，2表示人，3表示箱子，4表示目的地 */
 246   1        if(key==1){//直接移动
 247   2          if(mat[cur_x][cur_y]==4)map[cur_x][cur_y]=4;
 248   2          else map[cur_x][cur_y]=0;
 249   2          update(cur_x,cur_y);
 250   2       
 251   2          cur_x+=dir[dirction][0]; cur_y+=dir[dirction][1];
 252   2          map[cur_x][cur_y]=2;
 253   2          update(cur_x,cur_y);
 254   2                
 255   2        }
 256   1        else if(key==2){//间接移动
 257   2          if(mat[cur_x][cur_y]==4)map[cur_x][cur_y]=4;
 258   2          else map[cur_x][cur_y]=0;
 259   2          update(cur_x,cur_y);
 260   2                
 261   2          cur_x+=dir[dirction][0]; cur_y+=dir[dirction][1];
 262   2          map[cur_x][cur_y]=2;
 263   2          update(cur_x,cur_y);
 264   2       
 265   2          x=cur_x+dir[dirction][0]; y=cur_y+dir[dirction][1];
 266   2          map[x][y]=3;
 267   2          update(x,y);
 268   2        }
 269   1      }
 270           
 271          void lcd_init(){
 272   1        uchar i,j;
 273   1       
 274   1        init_BMP();
 275   1       
 276   1        cur_x=1; cur_y=5;
 277   1        X=3;
 278   1        
 279   1        for(i=0;i<8;i++){
 280   2          for(j=0;j<8;j++)map[i][j]=mat[i][j];
 281   2        }
 282   1      }
 283           
 284          void main()
 285          {
 286   1        uchar i,num,index=6;
 287   1        lcd_init();
 288   1        clear();
 289   1        show_map();
 290   1       
 291   1        /* 0表示空格，1表示墙，2表示人，3表示箱子，4表示目的地 */
 292   1        while(1){
 293   2          num=0;
 294   2          for(i=0;i<3;i++){
 295   3            if(map[ where[i][0] ][ where[0][1] ]==3)num++;
 296   3            else break;
 297   3          }
 298   2          if(num==X)goto WIN;
 299   2          if(key_up==0){
 300   3            delay(500);
 301   3            if(key_up==0){
C51 COMPILER V9.57.0.0   TUI                                                               06/04/2022 13:56:07 PAGE 6   

 302   4              index=judge(cur_x,cur_y,0);
 303   4              fun(index,0);
 304   4            }while(!key_up);
 305   3          }
 306   2          else if(key_down==0){
 307   3            delay(500);
 308   3            if(key_down==0){
 309   4              index=judge(cur_x,cur_y,1);
 310   4              fun(index,1);
 311   4            }while(!key_down);
 312   3          }
 313   2          else if(key_left==0){
 314   3            delay(500);
 315   3            if(key_left==0){
 316   4              index=judge(cur_x,cur_y,2);
 317   4              fun(index,2);
 318   4            }while(!key_left);
 319   3          }
 320   2          else if(key_right==0){
 321   3            delay(500);
 322   3            if(key_right==0){
 323   4              index=judge(cur_x,cur_y,3);
 324   4              fun(index,3);
 325   4            }while(!key_right);
 326   3          }
 327   2        }
 328   1      WIN:
 329   1        init_Hanzi();   
 330   1       
 331   1        write_LCD_command(0x98+4);
 332   1        for(i=0;i<8;i++)
 333   1        {
 334   2          write_LCD_data(table4[i]);
 335   2        }
 336   1        delay(1000);
 337   1        while(1); 
 338   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2787    ----
   CONSTANT SIZE    =    138    ----
   XDATA SIZE       =     98      29
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
